{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": [
    "@typescript-eslint/eslint-plugin",
    "prettier",
    "import",
    "@nrwl/nx"
  ],
  "extends": [
    "airbnb-typescript/base",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "prettier",
    "prettier/@typescript-eslint"
  ],
  "rules": {
    "max-len": ["error", 120],
    "max-lines": ["error", 350],
    "max-classes-per-file": ["error", 3], //input / type & update are allowed in same file
    "import/prefer-default-export": "off",
    "class-methods-use-this": "off", // huge pain with interface
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    //"@typescript-eslint/no-explicit-any": "off", // not sur about this one
    "no-unused-vars": "off",
    "import/no-cycle": "off", // typeorm will do some cycle with many to many
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      { "allowTernary": true }
    ],
    "@typescript-eslint/array-type": ["warn", { "default": "array" }],
    "no-underscore-dangle": ["error", { "allowAfterThis": true }]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              { "sourceTag": "*", "onlyDependOnLibsWithTags": ["*"] }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "parserOptions": { "project": "./tsconfig.*?.json" },
      "rules": {}
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    }
  ]
}
